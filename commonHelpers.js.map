{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('button[data-start]');\nconst day = document.querySelector('span[data-days]');\nconst hour = document.querySelector('span[data-hours]');\nconst minute = document.querySelector('span[data-minutes]');\nconst second = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate = null;\nlet intervalId = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n\n    onClose(selectedDates) {\n        if (intervalId) {\n            input._flatpickr.clear();\n        } else {\n            if (selectedDates[0] < new Date()) {\n                iziToast.error({\n                    title: 'Error',\n                    message: 'Please choose a date in the future',\n                });\n                btnStart.disabled = true;\n            } else {\n                userSelectedDate = selectedDates[0];\n                btnStart.disabled = false;\n                iziToast.success({\n                    title: 'OK',\n                    message: 'You can press \"Start\"!',\n                });\n            }\n        }\n    },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, '0');\n}\n\nfunction startTimer() {\n    if (!userSelectedDate || intervalId) {\n        return;\n    }\n\n    intervalId = setInterval(() => {\n        const currentDate = new Date();\n        const diff = userSelectedDate.getTime() - currentDate.getTime();\n        const { days, hours, minutes, seconds } = convertMs(diff);\n\n        if (diff <= 0) {\n            clearInterval(intervalId);\n            intervalId = null;\n        } else {\n            day.textContent = addLeadingZero(days);\n            hour.textContent = addLeadingZero(hours);\n            minute.textContent = addLeadingZero(minutes);\n            second.textContent = addLeadingZero(seconds);\n        }\n    }, 1000);\n}\n\nbtnStart.addEventListener('click', startTimer);"],"names":["input","btnStart","day","hour","minute","second","userSelectedDate","intervalId","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","startTimer","currentDate","diff"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAM,SAAS,cAAc,iBAAiB,EAC9CC,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAS,SAAS,cAAc,oBAAoB,EACpDC,EAAS,SAAS,cAAc,oBAAoB,EAE1D,IAAIC,EAAmB,KACnBC,EAAa,KAEjB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACfF,EACAP,EAAM,WAAW,QAEbS,EAAc,GAAK,IAAI,MACvBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCAC7B,CAAiB,EACDT,EAAS,SAAW,KAEpBK,EAAmBG,EAAc,GACjCR,EAAS,SAAW,GACpBS,EAAS,QAAQ,CACb,MAAO,KACP,QAAS,wBAC7B,CAAiB,EAGZ,CACL,EAEAC,EAAUX,EAAOQ,CAAO,EAExB,SAASI,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C,CAEA,SAASC,GAAa,CACd,CAACd,GAAoBC,IAIzBA,EAAa,YAAY,IAAM,CAC3B,MAAMc,EAAc,IAAI,KAClBC,EAAOhB,EAAiB,QAAS,EAAGe,EAAY,QAAO,EACvD,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUU,CAAI,EAEpDA,GAAQ,GACR,cAAcf,CAAU,EACxBA,EAAa,OAEbL,EAAI,YAAcgB,EAAeJ,CAAI,EACrCX,EAAK,YAAce,EAAeH,CAAK,EACvCX,EAAO,YAAcc,EAAeF,CAAO,EAC3CX,EAAO,YAAca,EAAeD,CAAO,EAElD,EAAE,GAAI,EACX,CAEAhB,EAAS,iBAAiB,QAASmB,CAAU"}